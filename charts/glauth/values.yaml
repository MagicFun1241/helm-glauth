replicaCount: 1

image:
  # --------------------------------------------------------------------------------
  # Repository to pull from the registry.
  # --------------------------------------------------------------------------------
  repository: "ghcr.io/nnstd/glauth"

  # Production tag
  tag: "v2.4.44"

  # Testing tag
  #tag: "nightly"

  pullPolicy: IfNotPresent

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

config:
  debug: false

  systemLogging: false
  structuredLogging: false

  # --------------------------------------------------------------------------------
  # Users configuration - define users for the LDAP server
  # These users will be used only when backend.type is "config"
  # --------------------------------------------------------------------------------
  users:
    - name: "johndoe"
      givenname: "John"
      sn: "Doe"
      mail: "jdoe@example.com"
      uidnumber: 5001
      primarygroup: 5501
      passsha256: "6478579e37aff45f013e14eeb30b3cc56c72ccdc310123bcdf53e0333e3f416a" # dogood

  # --------------------------------------------------------------------------------
  # Groups configuration - define groups for the LDAP server
  # --------------------------------------------------------------------------------
  groups:
    - name: "users"
      gidnumber: 5501

  # --------------------------------------------------------------------------------
  # Will be used, if our backend is SQLite, to create a storage volume for the db
  # Also, to store cert information if using LDAPS
  # --------------------------------------------------------------------------------
  storage:
    size: 20G

    # Or you could make sure that a different storageClass
    # is picked upon instantiation.
    className: ""

    # You may wish to override the accessMode type; for instance if you
    # are setting up a single node with hostPath, since hostPath
    # does not support multiple accessMode but we are requesting that.
    # Note: When using PostgreSQL as the database engine, ReadWriteOnce
    # is automatically used. You can override this by setting:
    accessMode: ""
  
    # Alternatively, you could use an existing claim.
    existingClaim: false

  ldap:
    enabled: true

    # Listen address for LDAP, default is "0.0.0.0:3893"
    listen: ""

  ldaps:
    enabled: false

    # Listen address for LDAPS, default is "0.0.0.0:3894"
    listen: ""

    # Path to the certificate file
    # to enable ldaps genrerate a certificate, eg. with:
    # openssl req -x509 -newkey rsa:4096 -keyout glauth.key -out glauth.crt -days 365 -nodes -subj '/CN=`hostname`'
    cert: ""
    # Path to the key file
    key: ""

  api:
    enabled: true

    # Enable internal API for debugging application performance
    internals: true
    
    # Whether to enable TLS
    tls: false
    
    # Listen address for the API, default is "0.0.0.0:5555"    
    listen: ""

    # Path to the certificate file
    cert: ""
    # Path to the key file
    key: ""

  behaviors:
    # Ignore all capabilities restrictions, for instance allowing every user to perform a search
    ignoreCapabilities: false

    # Enable a "fail2ban" type backoff mechanism temporarily banning repeated failed login attempts
    limitFailedBinds: true

    # How many failed login attempts are allowed before a ban is imposed
    numberOfFailedBinds: 3

    # How long (in seconds) is the window for failed login attempts
    periodOfFailedBinds: 10
    
    # How long (in seconds) is the ban duration
    blockFailedBindsFor: 60
    
    # Clean learnt IP addresses every N seconds
    pruneSourceTableEvery: 600
    
    # Clean learnt IP addresses not seen in N seconds
    pruneSourcesOlderThan: 600

  backend:
    # Possible values: 'config' or 'database'
    type: database

    # If provided, this is the name of a local config file that will be
    # stored in our configuration map.
    # Note that when using 'config' you could simply add then in `config.users`
    # and not provide an alternate file.
    file: ""

    # Base DN for LDAP structure
    baseDN: "dc=glauth,dc=com"
    
    ## Configure dn format to use structures like 
    ## "uid=serviceuser,cn=svcaccts,$BASEDN" instead of "cn=serviceuser,ou=svcaccts,$BASEDN"
    ## to help ease migrations from other LDAP systems
    nameFormat: "cn"
    groupFormat: "ou"

    # If you are using a client that requires reading the root DSE first
    # such as SSSD. Default is false.
    anonymousDSE: false

    # SSH key attribute name, default is 'sshPublicKey'
    # can be set to 'ipaSshPubKey' for IPA compatibility
    sshKeyAttr: ""

  database:
    # Database engine: 'sqlite' or 'postgres'
    engine: sqlite

    sqlite:
      # If our engine is 'sqlite' then this runs a separate pod,
      # that we can use to provision/update our database.
      # For security reasons, you should disable this pod when not in use.
      # Simply run `helm upgrade` instead of `helm install` after setting the
      # value below to false, and the pod will be terminated. Of course, it can be
      # restarted in a similar manner.
      shell: false

    # PostgreSQL configuration (used when engine is 'postgres')
    postgres:
      # Connection string for PostgreSQL
      # Format: "host=<host> port=<port> dbname=<dbname> user=<user> password=<password> sslmode=<sslmode>"
      # Only required when createResources is false
      connectionString: ""
      
      # Whether to create PostgreSQL CRD resources (Postgres and PostgresUser)
      # Set to false if you're using an external PostgreSQL instance
      # When true, the connection string will be automatically sourced from the
      # generated secret (postgres-user) via POSTGRES_CONNECTION_STRING environment variable
      createResources: false
      
      # Secret name to create for PostgreSQL credentials (used by the PostgreSQL CRD)
      # The actual secret created by the operator may have a different name
      secretName: "postgres-user"
      
      # Actual secret name created by the PostgreSQL operator (if different from secretName)
      # Set this to the actual secret name if the operator creates a different name
      # Example: "postgres-user-glauth"
      existingSecretName:

service:
  name: glauth

  # --------------------------------------------------------------------------------
  # How do we expose the server to the outside world?
  # --------------------------------------------------------------------------------

  #type: ClusterIP
  #ports:
  #  - name: ldap
  #    internal: 3893
  #    external: 3893
  #  - name: ldaps
  #    internal: 3894
  #    external: 3894
  #  - name: web
  #    internal: 5555
  #    external: 5555

  type: NodePort
  ports:
    - name: ldap
      internal: 3893
      external: 3893
      node: 30389
    - name: ldaps
      internal: 3894
      external: 3894
      node: 30636
    - name: web
      internal: 5555
      external: 5555
      node: 30555

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# --------------------------------------------------------------------------------
# Untested so far: ingress for port 5555 or even TCP ingress if needed
# --------------------------------------------------------------------------------

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
